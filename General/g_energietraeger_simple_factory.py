from Domain.General import GEnergietraegerFactory, GEnergietraegerKlasse, GEnergietraeger


class GEnergietraegerSimpleFactory(GEnergietraegerFactory):
    def create(self, klassen: dict[str, GEnergietraegerKlasse]) -> dict[str, GEnergietraeger]:
        energietraeger_list = [GEnergietraeger('Braunkohle', klassen['Fossile fest']),
                               GEnergietraeger('Braunkohlen-Briketts', klassen['Fossile fest']),
                               GEnergietraeger('Brenntorf', klassen['Fossile fest']),
                               GEnergietraeger('Koks', klassen['Fossile fest']),
                               GEnergietraeger('Steinkohle', klassen['Fossile fest']),
                               GEnergietraeger('Benzin', klassen['Fossile flüssig']),
                               GEnergietraeger('Diesel', klassen['Fossile flüssig']),
                               GEnergietraeger('Heiz-Gasöl', klassen['Fossile flüssig']),
                               GEnergietraeger('Petroleum', klassen['Fossile flüssig']),
                               GEnergietraeger('Heizöl', klassen['Fossile flüssig']),
                               GEnergietraeger('Flüssiggas', klassen['Fossile flüssig']),
                               GEnergietraeger('Erdgas', klassen['Fossile gasförmig']),
                               GEnergietraeger('Mischgas', klassen['Fossile gasförmig']),
                               GEnergietraeger('Brennbare Abfälle', klassen['Brennbare Abfälle']),
                               GEnergietraeger('Scheitholz', klassen['Scheitholz']),
                               GEnergietraeger('Hausmüll Bioanteil', klassen['Biogene']),
                               GEnergietraeger('Pellets+Holzbriketts', klassen['Biogene']),
                               GEnergietraeger('Holzabfall', klassen['Biogene']),
                               GEnergietraeger('Holzkohle', klassen['Biogene']),
                               GEnergietraeger('Ablaugen', klassen['Biogene']),
                               GEnergietraeger('Deponiegas', klassen['Biogene']),
                               GEnergietraeger('Klärgas', klassen['Biogene']),
                               GEnergietraeger('Biogas', klassen['Biogene']),
                               GEnergietraeger('Bioethanol', klassen['Biogene']),
                               GEnergietraeger('Biodiesel', klassen['Biogene']),
                               GEnergietraeger('Sonst. Biogene flüssig', klassen['Biogene']),
                               GEnergietraeger('Sonst. Biogene fest', klassen['Biogene']),
                               GEnergietraeger('Biogene', klassen['Biogene']),
                               GEnergietraeger('Geothermie', klassen['Erneuerbare']),
                               GEnergietraeger('Umgebungswärme', klassen['Erneuerbare']),
                               GEnergietraeger('Solarwärme', klassen['Erneuerbare']),
                               GEnergietraeger('Erneuerbare', klassen['Erneuerbare']),
                               GEnergietraeger('Fernwärme', klassen['Fernwärme']),
                               GEnergietraeger('Elektrische Energie', klassen['Elektrische Energie'])]
        return {energietraeger.name: energietraeger for energietraeger in energietraeger_list}
